function Main.main 1
push constant 8001
push constant 16
push constant 1
neg
call Main.fillMemory 3
pop temp 0
push constant 8000
call Memory.peek 1
pop local 0
push local 0
call Main.convert 1
pop temp 0
push constant 0
return
function Main.convert 3
push constant 0
not
pop local 2
label W0
push local 2
not
if-goto W1
push local 1
push constant 1
add
pop local 1
push local 0
call Main.nextMask 1
pop local 0
push local 1
push constant 16
gt
not
if-goto IF-TRUE2
goto IF-FALSE3
label IF-TRUE2
push argument 0
push local 0
and
push constant 0
eq
not
if-goto IF-TRUE5
goto IF-FALSE6
label IF-TRUE5
push constant 8000
push local 1
add
push constant 1
call Memory.poke 2
pop temp 0
goto IF-END7
label IF-FALSE6
push constant 8000
push local 1
add
push constant 0
call Memory.poke 2
pop temp 0
label IF-END7
goto IF-END4
label IF-FALSE3
push constant 0
pop local 2
label IF-END4
goto W0
label W1
push constant 0
return
function Main.nextMask 0
push argument 0
push constant 0
eq
if-goto IF-TRUE8
goto IF-FALSE9
label IF-TRUE8
push constant 1
return
goto IF-END10
label IF-FALSE9
push argument 0
push constant 2
call Math.multiply 2
return
label IF-END10
function Main.fillMemory 0
label W11
push argument 1
push constant 0
gt
not
if-goto W12
push argument 0
push argument 2
call Memory.poke 2
pop temp 0
push argument 1
push constant 1
sub
pop argument 1
push argument 0
push constant 1
add
pop argument 0
goto W11
label W12
push constant 0
return
